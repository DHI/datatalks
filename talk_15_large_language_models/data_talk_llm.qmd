---
title: Data Talk - Large Language Models
author: Jesper Mariegaard and Clemens Cremer
date: 2023-02-07
date-format: long
slide-number: c/t
transition: slide
format: revealjs
width: 1920
height: 1080
jupyter: python3
execute: 
  freeze: auto
  enable: true
---



# agenda

- general introduction LLM  
- history from Johan
- examples chatgpt (record some in case it doesn't work)  
    - quick insight into some area (CAREFUL)  
	- reformatting table  
	- explain code
- example copilot  
	- quick functions
    - plotting and formatting (e.g. annotations) 

- where is this going   
- what does it mean for us?   



# general introduction LLM

- large language models = LLM
- LLMs are trained on large amounts of text
- chatGPT is a LLM, but not the only one
- keeping track of state (conversational)
- working memory is limited 10-40k characters (you can't write a book with it in a go )


::: footer
https://www.youtube.com/watch?v=lnA9DMvHtfI
:::



# notes on using ChatGPT for code

- Explain code
- Improved existing code
- Rewrite code using correct style (refactor code made by non-native Python devs)
- Rewrite code using ideomatic constructs (make code Pythonic)
- Simplify code
- Exploring alternatives
- Writing documentation
- Writing tests
- Tracking down bugs



# github copilot

- more context aware in your environment
- https://copilot.github.com/
- https://copilot.github.com/blog/introducing-copilot


# where is it going 
- many things still unclear
- some good some bad sides to it


## criticism
- sophisticated bullshit
- privacy  
- data security  
- intellectual property  
- citations could be handled with "written in cooperation with chatGPT"  



## potential (longer term)
- prohibitive cost to train LLM from scratch
- limited variety in LLMs will exist
- domain knowledge infused LLMs
- even this predictions might be false (e.g. transformer killer)


## what does it mean for me? (short term)

- if you haven't tried --> try!
- adapt to leverage higher productivity  

- if everyone can use it, everyone can do it --> basic programming skills no longer required?
- new skillsets needed?
	- new workflows and ways of working --> adopt workflows including LLMs 
	- unlearning old habits
	- critical mindset more important than ever --> bullshit does scale now
	- abitlity to review is important
- discussion...  


## For DHI engineers... 

- Text
    - Background information (be careful)  
    - Proposal and Report writing (insert application for job image here)
		- Differ in tone of voice,...
    - Presentations (slides)
		- try quarto
		- try chatBCG
- Code
    - Documentation    
    - Tests